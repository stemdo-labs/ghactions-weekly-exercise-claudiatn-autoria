name: CI
on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true

    outputs:
      tag:
        value: ${{ jobs.tag_image.outputs.tag_image }}

  
jobs:
  tests-app:
    if: ${{ inputs.environment == 'production' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: test app
        uses: ./.github/actions/tests-app
  
  tag_image:
     if: ${{ always() }} 
     needs: tests-app
     runs-on: ubuntu-latest
     outputs:
      tag_image: ${{ steps.tag.outputs.tagged }}

     steps:
       - name: Checkout
         uses: actions/checkout@v3
        
       - name: Tag de la imagen de Docker
         id: tag
         uses: ./.github/actions/taggear_image
         with:
           environment:  ${{ inputs.environment }}
           

       - name: Imprimir tag
         run: |
           echo tag_image: ${{ steps.tag.outputs.tagged }}
  
  build:
    if: ${{ always() }} 
    needs: tag_image
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    
    env:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      
      
    steps:
    - name: Checkout
      uses: actions/checkout@v3
       
    - name: Imprimir valores de entrada
      run: |
            echo "El entorno recibido es: ${{ inputs.environment }}"
            echo "El nombre de usuario de Docker es: $DOCKER_USERNAME"


    - name: Hacer login en DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t $DOCKER_USERNAME/${{ needs.tag_image.outputs.tag_image }} .
        docker images
        

    - name: Subir Docker image
      run: |
        docker push $DOCKER_USERNAME/${{ needs.tag_image.outputs.tag_image }}

 
    

      
      

